
name: CICDWorkshop-failed

on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+'

jobs:
  commit-message:
    runs-on: ubuntu-latest
    name: commit-message-validation
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: commit_check
        uses: uptownaravi/verify-commit-message-action@v2
        with:
          regex: '^(?!#NORUN)'

  trivy-scan:
    runs-on: ubuntu-latest
    name: trivy-scan vulnerability 
    needs: commit-message
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        id: trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'table'
          output: 'trivy-report.txt'
          exit-code: "1"
          severity: HIGH  
         
  failed-trivy-scan:
    runs-on: ubuntu-latest
    name: slack send failed trivy scan vulnerability
    needs: trivy-scan
    if: failure()
    steps:
      - name: Trivy failed slack send notification
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "Ref": ${{ github.ref }},
              "Event": ${{ github.event_name }},
              "Actions URL": ${{ github.run_url }},
              "Commit": ${{ github.sha }},
              "Scan Failed - Hai xinjie": "Failed trivy scan, see uploaded report"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}



  docker:
    runs-on: ubuntu-latest
    needs: trivy-scan
    if: success()
    
    permissions:
      contents: read
      packages: write
      id-token: write 

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        id: build-and-push
        with:
          push: true
          tags: jinshouwuxian/go-fortune:${{ github.sha }} 
          
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ github.sha }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ github.sha }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"


      - name: send slack
        id: slack_success
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "CHANNEL_ID" ## chenage channel id
          payload: |
            {
              "Name": "Hai Xinjie",
              "attachments": [
                {
                  "Matriculation number": "test",
                  "Email": "dbab09",
                  "fields": [
                    {
                      "Name": "ab",
                      "Matriculation number": "test",
                      "Email": abc@gmail.com,
                      "Repository": "In Progress",
                      "Docker Hub URL": "https://docker.com"
                    }
                  ]
                }
              ]
            }

        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN}}

